public class Pessoa {
    private Long id;
    private String nome;
    private String email;

    // Getters e setters
}

public class Aluno {
    private Long id;
    private Pessoa pessoa;

    // Getters e setters
}

public class Professor {
    private Long id;
    private Pessoa pessoa;

    // Getters e setters
}

public class Curso {
    private Long id;
    private String nome;

    // Getters e setters
}

public class Disciplina {
    private Long id;
    private String nome;

    // Getters e setters
}

public class Turma {
    private Long id;
    private Disciplina disciplina;
    private Professor professor;
    private List<Aluno> alunos;

    // Getters e setters
}

@Component
public class DadosIniciais implements CommandLineRunner {

    @Autowired
    private DisciplinaRepository disciplinaRepository;

    @Autowired
    private ProfessorRepository professorRepository;

    @Autowired
    private SalaRepository salaRepository;

    @Override
    public void run(String... args) throws Exception {
        // Inserir disciplinas
        Disciplina vivencias = new Disciplina();
        vivencias.setNome("Vivências");
        disciplinaRepository.save(vivencias);

        Disciplina sistemasOperacionais = new Disciplina();
        sistemasOperacionais.setNome("Sistemas Operacionais");
        disciplinaRepository.save(sistemasOperacionais);

        Disciplina eticaLegislacao = new Disciplina();
        eticaLegislacao.setNome("Ética e Legislação");
        disciplinaRepository.save(eticaLegislacao);

        Disciplina programacaoOO = new Disciplina();
        programacaoOO.setNome("Programação Orientada a Objetos");
        disciplinaRepository.save(programacaoOO);

        // Inserir professores
        Professor leila = new Professor();
        leila.setNome("Leila");
        professorRepository.save(leila);

        Professor marcelo = new Professor();
        marcelo.setNome("Marcelo");
        professorRepository.save(marcelo);

        Professor vanessa = new Professor();
        vanessa.setNome("Vanessa");
        professorRepository.save(vanessa);

        Professor leanderson = new Professor();
        leanderson.setNome("Leanderson");
        professorRepository.save(leanderson);

        Professor anaPaula = new Professor();
        anaPaula.setNome("Ana Paula");
        professorRepository.save(anaPaula);

        // Inserir salas
        Sala c331 = new Sala();
        c331.setNumero("C331");
        salaRepository.save(c331);

        Sala c115 = new Sala();
        c115.setNumero("C115");
        salaRepository.save(c115);

        Sala c311 = new Sala();
        c311.setNumero("C311");
        salaRepository.save(c311);

        Sala c323 = new Sala();
        c323.setNumero("C323");
        salaRepository.save(c323);

        // Inserir horários
        Horario segundaLeila = new Horario();
        segundaLeila.setDiaSemana(DayOfWeek.MONDAY);
        segundaLeila.setHorario(LocalTime.of(8, 0));
        segundaLeila.setDisciplina(vivencias);
        segundaLeila.setProfessor(leila);
        segundaLeila.setSala(c331);
        horarioRepository.save(segundaLeila);

        Horario tercaMarcelo = new Horario();
        tercaMarcelo.setDiaSemana(DayOfWeek.TUESDAY);
        tercaMarcelo.setHorario(LocalTime.of(10, 0));
        tercaMarcelo.setDisciplina(sistemasOperacionais);
        tercaMarcelo.setProfessor(marcelo);
        tercaMarcelo.setSala(c115);
        horarioRepository.save(tercaMarcelo);

     

@Service
public class HorarioService {

    @Autowired
    private HorarioRepository horarioRepository;

    public void imprimirHorario() {
        List<Horario> horarios = horarioRepository.findAll();
        for (Horario horario : horarios) {
            System.out.println("Dia da semana: " + horario.getDiaSemana());
            System.out.println("Horário: " + horario.getHorario());
            System.out.println("Disciplina: " + horario.getDisciplina().getNome());
            System.out.println("Professor: " + horario.getProfessor().getNome());
            System.out.println("Sala: " + horario.getSala().getNumero());
            System.out.println();
        }
    }
}

